import React, { useEffect, useRef, useState } from "react";
import styles from "./CustomSignInModal.module.scss";
import Modal from "react-modal";
import SignInButton from "../TopBar/SignInButton";
import CheckedCircle from "../SignInModal/CheckedCircle";
import { useAccount } from "wagmi";
import CustomConnectButton from "../TopBar/SignInButton/CustomConnectButton";
Modal.setAppElement("*");
const CustomSignInModal = ({ onRequestClose, isOpen }) => {
  const { isConnected } = useAccount();
  const [shouldCallSignInMethod, setShouldCallSignInMethopd] = useState(false);
  const isPreviouslyConnected = useRef(isConnected);

  const customStyles = {
    content: {
      background:
        "linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 41.15%)",
      height: "fit-content",
      width: "fit-content",
      margin: "auto",
      backdropFilter: "blur(60px)",
      borderRadius: "16px",
      borderColor: "#000000",
      padding: "0px",
    },
    overlay: {
      background: "rgba(0, 0, 0, 0.6)",
    },
  };

  useEffect(() => {
    if (isPreviouslyConnected.current === false && isConnected === true) {
      isPreviouslyConnected.current = true;
      setShouldCallSignInMethopd(true);
    }
  }, [isConnected]);

  // console.log({
  //   c: isPreviouslyConnected.current === false && isConnected === true,
  //   isConnected: isConnected,
  //   shouldCallSignInMethod,
  // });

  return (
    <Modal onRequestClose={onRequestClose} isOpen={isOpen} style={customStyles}>
      <div
        className={`flex flex-col justify-start items-start rounded-[16px] backdrop-blur-3xl  ${styles.ModalContainer}`}
      >
        {!isConnected ? (
          <CustomConnectButton />
        ) : (
          <SignInButton
            showSquareLoginButton={true}
            onSuccess={onRequestClose}
            isSignInModalOpen={isOpen}
            key={isConnected}
            isWalletConnected={shouldCallSignInMethod}
          />
        )}
        <div
          className={`flex justify-start flex-col gap-[12px] not-italic text-[12px] font-medium ${styles.LensInfo}`}
        >
          <div className="flex gap-[8px] justify-start items-center">
            <CheckedCircle />
            Checkout NFTs by Lens Frens
          </div>
          <div className="flex gap-[8px] justify-start items-center">
            <CheckedCircle />
            Submit NFTs generated by you
          </div>
          <div className="flex gap-[8px] justify-start items-center">
            <CheckedCircle />
            Collect other NFTs
          </div>
          <div className="flex justify-start items-center text-[13px] leading-[160%] font-medium text-[rgba(255, 255, 255, 0.8)]">
            New to Lens?
            <span
              className="underline cursor-pointer ml-2 text-[#ADFF00]"
              onClick={() => {
                window.open("https://claim.lens.xyz/", "_blank");
              }}
            >
              Create an account
            </span>
          </div>
        </div>
      </div>
    </Modal>
  );
};

export default CustomSignInModal;
