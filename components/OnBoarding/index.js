import Image from "next/image";
import React from "react";
import HotOrNot from "../vote/svg/HotOrNot";
import { LensIconSvg } from "../vote/svg/LensIconSvg";
import styles from "./OnBoarding.module.scss";
import hand from "./gif/hand.gif";
import hotOrNot from "./gif/hotOrNot.gif";
import FireSvg from "../vote/svg/FireSvg";
import Not from "/components/vote/svg/not.js";
import FireSmallSvg from "../vote/svg/FirstTimeUser/FireSmallSvg";
import CollectSvg from "../vote/svg/FirstTimeUser/CollectSvg";
import HallOfFlamSvg from "../vote/svg/FirstTimeUser/HallOfFlamsvg";
import GenerateSvg from "../vote/svg/FirstTimeUser/GenerateSvg";

const onBoardingDetailsArray = [
  {
    title:
      "Join in on a thrilling showdown of A.I.-generated images where you and the community cast votes!",
    gif: hand,
  },
  {
    title: "For each image, you Vote whether it is Hot, or Not!",
    subTitle: "All images are A.I. generated by other users",
    gif: hotOrNot,
    width: 267,
    height: 160,
  },
  {
    title: "Collect hot NFTs by your lens frens to show your supportðŸ’°",
    subTitle: "Collect proceeds go to the user who generated it.",
    gif: <CollectSvg />,
    width: 212,
    height: 190,
  },
  {
    title:
      "NFTs with the highest number of Votes will be showcased in the Hall of Flame",
    subTitle: "",
    gif: <HallOfFlamSvg />,
    width: 489,
    height: 231,
  },
  {
    title:
      "Participate by generating A.I. images on NFT or Not and get started!",
    subTitle: "",
    gif: <GenerateSvg />,
    width: 160,
    height: 160,
  },
];

function OnBoarding() {
  const [onboardingindex, setOnboardingindex] = React.useState(0);
  return (
    <div className="flex items-center justify-center gap-[50px]">
      <div
        onClick={() => {
          setOnboardingindex(onboardingindex - 1);
        }}
        className="cursor-pointer"
      >
        <Not />
      </div>
      <div>
        <div
          id="vote-card"
          className={`${styles.cardContainer} flex justify-center mt-[25px] mb-[15px] order-2 aspect-[512/512] h-[520px] cursor-grab ${styles.voteCards}`}
        >
          {onBoardingDetailsArray && onBoardingDetailsArray.length > 0 && (
            <div className={`absolute pressable  ${styles.voteCard}`}>
              <div className={styles.onBoardingCard}>
                <div className={styles.headingContainer}>
                  <LensIconSvg />
                  <div className={styles.onBoardingHeading}>
                    Built on Lens, For Lens Frens
                  </div>
                </div>
                {onboardingindex === 0 && (
                  <>
                    <div className={styles.welcomeText}>Welcome to</div>
                    <div className="h-full">
                      <HotOrNot />
                    </div>
                    <div className={styles.heading}>
                      {onBoardingDetailsArray[onboardingindex].title}
                    </div>
                    <div className={styles.subHeading}>
                      Click <FireSmallSvg /> to move to the next card
                    </div>

                    <Image
                      src={onBoardingDetailsArray[onboardingindex].gif}
                      width={103}
                      height={143}
                      alt="my gif"
                    />
                  </>
                )}
                {onboardingindex > 0 && (
                  <>
                    <div>
                      <Image
                        src={onBoardingDetailsArray[onboardingindex].gif}
                        width={onBoardingDetailsArray[onboardingindex].width}
                        height={onBoardingDetailsArray[onboardingindex].height}
                        alt="my gif"
                      />
                    </div>
                    <div className={styles.heading}>
                      {onBoardingDetailsArray[onboardingindex].title}
                    </div>
                    <div className={styles.subHeading}>
                      {onBoardingDetailsArray[onboardingindex].subTitle}
                    </div>
                    <div className={styles.nextCardBtnText}>
                      {onboardingindex === 4
                        ? "Click to get started â†’"
                        : "Click to move to the next card â†’"}
                    </div>
                  </>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
      <div
        onClick={() => {
          setOnboardingindex(onboardingindex + 1);
        }}
        className="cursor-pointer"
      >
        <FireSvg />
      </div>
    </div>
  );
}

export default OnBoarding;
